{"ast":null,"code":"export default {\n  data() {\n    return {\n      provinces: [],\n      // 存储从服务器加载的省份及其新闻列表\n      pageSize: 10 // 每页显示的新闻数量\n    };\n  },\n\n  mounted() {\n    this.loadProvincesAndNews();\n  },\n  methods: {\n    loadProvincesAndNews() {\n      this.$request.get('/province/selectAll').then(res => {\n        this.provinces = res.data.map(province => ({\n          ...province,\n          newsList: [] // 初始化每个省份的新闻列表为空\n        }));\n\n        this.provinces.forEach(province => {\n          this.loadProvinceNews(province, 1);\n        });\n      }).catch(error => {\n        console.error(\"Error loading provinces:\", error);\n      });\n    },\n    loadProvinceNews(province, pageNum) {\n      this.$request.get('/news/selectPage', {\n        params: {\n          pageNum: pageNum,\n          pageSize: this.pageSize,\n          province: province.name // 按名称加载新闻\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          province.newsList = res.data?.list || [];\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        console.error(`Error loading news for province ${province.name}:`, error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","provinces","pageSize","mounted","loadProvincesAndNews","methods","$request","get","then","res","map","province","newsList","forEach","loadProvinceNews","catch","error","console","pageNum","params","name","code","list","$message","msg"],"sources":["src/views/front/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div class=\"header\">\r\n      <h1>内蒙古今日招聘信息汇总</h1>\r\n    </div>\r\n\r\n    <div class=\"content-area\">\r\n      <!-- 动态生成新闻框 -->\r\n      <div v-for=\"province in provinces\" :key=\"province.id\" class=\"column\">\r\n        <h2>{{ province.name }}<a href=\"#\" class=\"more-link\">更多...</a></h2>\r\n        <ul>\r\n          <li v-for=\"(item, index) in province.newsList.slice(0, 10)\" :key=\"item.id\">\r\n            <span class=\"number\">{{ index + 1 }}.</span>\r\n            <a @click=\"$router.push('/front/newsDetail?id=' + encodeURIComponent(item.id))\">{{ item.title }}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <footer class=\"footer\">\r\n      &copy; 2024 新闻. 保留所有权利。\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      provinces: [],  // 存储从服务器加载的省份及其新闻列表\r\n      pageSize: 10,  // 每页显示的新闻数量\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadProvincesAndNews();\r\n  },\r\n  methods: {\r\n    loadProvincesAndNews() {\r\n      this.$request.get('/province/selectAll').then(res => {\r\n        this.provinces = res.data.map(province => ({\r\n          ...province,\r\n          newsList: [] // 初始化每个省份的新闻列表为空\r\n        }));\r\n\r\n        this.provinces.forEach(province => {\r\n          this.loadProvinceNews(province, 1);\r\n        });\r\n      }).catch(error => {\r\n        console.error(\"Error loading provinces:\", error);\r\n      });\r\n    },\r\n    loadProvinceNews(province, pageNum) {\r\n      this.$request.get('/news/selectPage', {\r\n        params: {\r\n          pageNum: pageNum,\r\n          pageSize: this.pageSize,\r\n          province: province.name,  // 按名称加载新闻\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          province.newsList = res.data?.list || [];\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      }).catch(error => {\r\n        console.error(`Error loading news for province ${province.name}:`, error);\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式部分不需要修改，因为它们是通用的，不依赖于具体的变量名 */\r\n</style>"],"mappings":"AA0BA;EACAA,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,QAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,oBAAA;EACA;EACAC,OAAA;IACAD,qBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,wBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAR,SAAA,GAAAQ,GAAA,CAAAT,IAAA,CAAAU,GAAA,CAAAC,QAAA;UACA,GAAAA,QAAA;UACAC,QAAA;QACA;;QAEA,KAAAX,SAAA,CAAAY,OAAA,CAAAF,QAAA;UACA,KAAAG,gBAAA,CAAAH,QAAA;QACA;MACA,GAAAI,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,6BAAAA,KAAA;MACA;IACA;IACAF,iBAAAH,QAAA,EAAAO,OAAA;MACA,KAAAZ,QAAA,CAAAC,GAAA;QACAY,MAAA;UACAD,OAAA,EAAAA,OAAA;UACAhB,QAAA,OAAAA,QAAA;UACAS,QAAA,EAAAA,QAAA,CAAAS,IAAA;QACA;MACA,GAAAZ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAY,IAAA;UACAV,QAAA,CAAAC,QAAA,GAAAH,GAAA,CAAAT,IAAA,EAAAsB,IAAA;QACA;UACA,KAAAC,QAAA,CAAAP,KAAA,CAAAP,GAAA,CAAAe,GAAA;QACA;MACA,GAAAT,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,oCAAAL,QAAA,CAAAS,IAAA,KAAAJ,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}