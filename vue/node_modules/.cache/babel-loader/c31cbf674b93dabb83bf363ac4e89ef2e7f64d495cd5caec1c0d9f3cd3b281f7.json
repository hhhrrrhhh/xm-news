{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\nconst routes = [{\n  path: '/',\n  redirect: '/front/home' // 默认重定向到新闻首页\n}, {\n  path: '/login',\n  name: 'Login',\n  meta: {\n    name: '登录'\n  },\n  component: () => import('../views/Login.vue') // 登录页面\n}, {\n  path: '/front/home',\n  name: 'Home',\n  meta: {\n    name: '系统首页'\n  },\n  component: () => import('../views/front/Home.vue') // 新闻首页\n}, {\n  path: '*',\n  name: 'NotFound',\n  meta: {\n    name: '无法访问'\n  },\n  component: () => import('../views/404.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  let user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\n  console.log(\"当前路径: \", to.path);\n  console.log(\"用户角色: \", user.role);\n  if (to.path === '/') {\n    if (!user.role) {\n      next('/front/home'); // 未登录用户访问根路径时，跳转到新闻首页\n    } else if (user.role === 'ADMIN') {\n      next('/home'); // 已登录的管理员跳转到后台首页\n    } else {\n      next('/login'); // 任何其他情况，跳转到登录页\n    }\n  } else if (to.path === '/front/home') {\n    next(); // 允许访问新闻首页，无论是否登录\n  } else if (user.role === 'ADMIN' && to.path.startsWith('/manager')) {\n    next(); // 已登录管理员允许访问管理页\n  } else {\n    next('/login'); // 其他情况一律跳转到登录页\n  }\n});\n\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","originalPush","prototype","push","location","call","catch","err","routes","path","redirect","name","meta","component","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","user","JSON","parse","localStorage","getItem","console","log","role","startsWith"],"sources":["C:/xm/xm-news/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst originalPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push(location) {\r\n  return originalPush.call(this, location).catch(err => err)\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: '/front/home',  // 默认重定向到新闻首页\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    meta: { name: '登录' },\r\n    component: () => import('../views/Login.vue')  // 登录页面\r\n  },\r\n  {\r\n    path: '/front/home',\r\n    name: 'Home',\r\n    meta: { name: '系统首页' },\r\n    component: () => import('../views/front/Home.vue')  // 新闻首页\r\n  },\r\n  { path: '*', name: 'NotFound', meta: { name: '无法访问' }, component: () => import('../views/404.vue') },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  let user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\r\n  console.log(\"当前路径: \", to.path);\r\n  console.log(\"用户角色: \", user.role);\r\n\r\n  if (to.path === '/') {\r\n    if (!user.role) {\r\n      next('/front/home');  // 未登录用户访问根路径时，跳转到新闻首页\r\n    } else if (user.role === 'ADMIN') {\r\n      next('/home');  // 已登录的管理员跳转到后台首页\r\n    } else {\r\n      next('/login');  // 任何其他情况，跳转到登录页\r\n    }\r\n  } else if (to.path === '/front/home') {\r\n    next();  // 允许访问新闻首页，无论是否登录\r\n  } else if (user.role === 'ADMIN' && to.path.startsWith('/manager')) {\r\n    next();  // 已登录管理员允许访问管理页\r\n  } else {\r\n    next('/login');  // 其他情况一律跳转到登录页\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAElB,MAAME,YAAY,GAAGF,SAAS,CAACG,SAAS,CAACC,IAAI;AAC7CJ,SAAS,CAACG,SAAS,CAACC,IAAI,GAAG,SAASA,IAAIA,CAACC,QAAQ,EAAE;EACjD,OAAOH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC5D,CAAC;AAED,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE,aAAa,CAAG;AAC5B,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE;IAAED,IAAI,EAAE;EAAK,CAAC;EACpBE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC,CAAE;AACjD,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBE,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;IAAED,IAAI,EAAE;EAAO,CAAC;EACtBE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB,CAAC,CAAE;AACtD,CAAC,EACD;EAAEJ,IAAI,EAAE,GAAG;EAAEE,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;IAAED,IAAI,EAAE;EAAO,CAAC;EAAEE,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,kBAAkB;AAAE,CAAC,CACrG;AAED,MAAMC,MAAM,GAAG,IAAIf,SAAS,CAAC;EAC3BgB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BX;AACF,CAAC,CAAC;AAEFM,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,EAAE,CAACZ,IAAI,CAAC;EAC9BoB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,IAAI,CAACO,IAAI,CAAC;EAEhC,IAAIV,EAAE,CAACZ,IAAI,KAAK,GAAG,EAAE;IACnB,IAAI,CAACe,IAAI,CAACO,IAAI,EAAE;MACdR,IAAI,CAAC,aAAa,CAAC,CAAC,CAAE;IACxB,CAAC,MAAM,IAAIC,IAAI,CAACO,IAAI,KAAK,OAAO,EAAE;MAChCR,IAAI,CAAC,OAAO,CAAC,CAAC,CAAE;IAClB,CAAC,MAAM;MACLA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE;IACnB;EACF,CAAC,MAAM,IAAIF,EAAE,CAACZ,IAAI,KAAK,aAAa,EAAE;IACpCc,IAAI,CAAC,CAAC,CAAC,CAAE;EACX,CAAC,MAAM,IAAIC,IAAI,CAACO,IAAI,KAAK,OAAO,IAAIV,EAAE,CAACZ,IAAI,CAACuB,UAAU,CAAC,UAAU,CAAC,EAAE;IAClET,IAAI,CAAC,CAAC,CAAC,CAAE;EACX,CAAC,MAAM;IACLA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE;EACnB;AACF,CAAC,CAAC;;AAEF,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}