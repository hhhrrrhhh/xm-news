{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from \"@/router\";\n\n// 创建一个新的axios对象\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_BASEURL,\n  // 后端的接口地址\n  timeout: 30000 // 请求超时设置为30秒\n});\n\n// request拦截器\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  let admin = JSON.parse(localStorage.getItem(\"xm-admin\") || '{}');\n  config.headers['token'] = admin.token; // 确保发送请求时携带Token\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// response拦截器\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n  if (typeof res === 'string') {\n    res = JSON.parse(res);\n  }\n  if (res.code === '401') {\n    router.push('/login');\n  }\n  return res;\n}, error => {\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","request","create","baseURL","process","env","VUE_APP_BASEURL","timeout","interceptors","use","config","headers","admin","JSON","parse","localStorage","getItem","token","error","Promise","reject","response","res","data","code","push"],"sources":["C:/xm/xm-news/vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from \"@/router\";\r\n\r\n// 创建一个新的axios对象\r\nconst request = axios.create({\r\n    baseURL: process.env.VUE_APP_BASEURL,   // 后端的接口地址\r\n    timeout: 30000                          // 请求超时设置为30秒\r\n})\r\n\r\n// request拦截器\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let admin = JSON.parse(localStorage.getItem(\"xm-admin\") || '{}');\r\n    config.headers['token'] = admin.token;  // 确保发送请求时携带Token\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response拦截器\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        if (typeof res === 'string') {\r\n            res = JSON.parse(res);\r\n        }\r\n        if (res.code === '401') {\r\n            router.push('/login');\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default request;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EACzBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe;EAAI;EACxCC,OAAO,EAAE,KAAK,CAA0B;AAC5C,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACP,OAAO,CAACQ,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EACjE,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;EAChEN,MAAM,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,KAAK,CAACK,KAAK,CAAC,CAAE;EACxC,OAAOP,MAAM;AACjB,CAAC,EAAEQ,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACAjB,OAAO,CAACO,YAAY,CAACa,QAAQ,CAACZ,GAAG,CAC7BY,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IACzBA,GAAG,GAAGT,IAAI,CAACC,KAAK,CAACQ,GAAG,CAAC;EACzB;EACA,IAAIA,GAAG,CAACE,IAAI,KAAK,KAAK,EAAE;IACpBxB,MAAM,CAACyB,IAAI,CAAC,QAAQ,CAAC;EACzB;EACA,OAAOH,GAAG;AACd,CAAC,EACDJ,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAejB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}