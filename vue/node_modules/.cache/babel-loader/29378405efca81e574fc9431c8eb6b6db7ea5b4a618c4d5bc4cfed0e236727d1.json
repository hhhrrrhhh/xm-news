{"ast":null,"code":"export default {\n  data() {\n    return {\n      provinces: [],\n      // 存储从服务器加载的省份及其新闻列表\n      pageSize: 10 // 每页显示的新闻数量\n    };\n  },\n\n  mounted() {\n    this.loadProvincesAndNews();\n  },\n  methods: {\n    loadProvincesAndNews() {\n      this.$request.get('/provinces/selectAll').then(res => {\n        console.log('Provinces loaded:', res.data); // 调试输出\n        this.provinces = res.data.map(province => ({\n          ...province,\n          newsList: [] // 初始化每个省份的新闻列表为空\n        }));\n\n        this.provinces.forEach(province => {\n          this.loadProvinceNews(province, 1);\n        });\n      }).catch(error => {\n        console.error(\"Error loading provinces:\", error);\n      });\n    },\n    loadProvinceNews(province, pageNum) {\n      this.$request.get('/news/selectPage', {\n        params: {\n          pageNum: pageNum,\n          pageSize: this.pageSize,\n          provincesId: province.provincesId // 按provincesId加载新闻\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          console.log(`News for ${province.provincesName} loaded:`, res.data?.list); // 调试输出\n          province.newsList = res.data?.list || [];\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(error => {\n        console.error(`Error loading news for province ${province.provincesName}:`, error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","provinces","pageSize","mounted","loadProvincesAndNews","methods","$request","get","then","res","console","log","map","province","newsList","forEach","loadProvinceNews","catch","error","pageNum","params","provincesId","code","provincesName","list","$message","msg"],"sources":["src/views/front/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-content\">\r\n    <div class=\"header\">\r\n      <h1>内蒙古今日招聘信息汇总</h1>\r\n    </div>\r\n\r\n    <div class=\"content-area\">\r\n      <!-- 动态生成新闻框 -->\r\n      <div v-for=\"province in provinces\" :key=\"province.provincesId\" class=\"column\">\r\n        <h2>{{ province.provincesName }}<a href=\"#\" class=\"more-link\">更多...</a></h2>\r\n        <ul>\r\n          <li v-for=\"(item, index) in province.newsList.slice(0, 10)\" :key=\"item.id\">\r\n            <span class=\"number\">{{ index + 1 }}.</span>\r\n            <a @click=\"$router.push('/front/newsDetail?id=' + encodeURIComponent(item.id))\">{{ item.title }}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <footer class=\"footer\">\r\n      &copy; 2024 新闻. 保留所有权利。\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      provinces: [],  // 存储从服务器加载的省份及其新闻列表\r\n      pageSize: 10,  // 每页显示的新闻数量\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadProvincesAndNews();\r\n  },\r\n  methods: {\r\n    loadProvincesAndNews() {\r\n      this.$request.get('/provinces/selectAll').then(res => {\r\n        console.log('Provinces loaded:', res.data); // 调试输出\r\n        this.provinces = res.data.map(province => ({\r\n          ...province,\r\n          newsList: [] // 初始化每个省份的新闻列表为空\r\n        }));\r\n\r\n        this.provinces.forEach(province => {\r\n          this.loadProvinceNews(province, 1);\r\n        });\r\n      }).catch(error => {\r\n        console.error(\"Error loading provinces:\", error);\r\n      });\r\n    },\r\n    loadProvinceNews(province, pageNum) {\r\n      this.$request.get('/news/selectPage', {\r\n        params: {\r\n          pageNum: pageNum,\r\n          pageSize: this.pageSize,\r\n          provincesId: province.provincesId,  // 按provincesId加载新闻\r\n        }\r\n      }).then(res => {\r\n        if (res.code === '200') {\r\n          console.log(`News for ${province.provincesName} loaded:`, res.data?.list); // 调试输出\r\n          province.newsList = res.data?.list || [];\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      }).catch(error => {\r\n        console.error(`Error loading news for province ${province.provincesName}:`, error);\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #f7f7f7;\r\n}\r\n\r\n.main-content {\r\n  width: 95%;\r\n  margin: 20px auto;\r\n}\r\n\r\n.header {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  background-color: #fff;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.content-area {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.content-area .column {\r\n  width: 23%;\r\n  background-color: #fff;\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.content-area .column h2 {\r\n  font-size: 18px;\r\n  border-bottom: 2px solid #333;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n}\r\n\r\n.content-area .column .more-link {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  font-size: 14px;\r\n  color: #007bff;\r\n  text-decoration: none;\r\n}\r\n\r\n.content-area .column .more-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\ncontent-area ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\ncontent-area ul li {\r\n  border-bottom: 1px solid #eee;\r\n  padding: 10px 0;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\ncontent-area ul li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\ncontent-area ul li a {\r\n  color: #333;\r\n  text-decoration: none;\r\n  flex-grow: 1;\r\n  display: block;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\ncontent-area ul li a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\ncontent-area ul li .number {\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n  color: #555;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.footer {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-top: 1px solid #ddd;\r\n  margin-top: 40px;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA;EACAA,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,QAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,oBAAA;EACA;EACAC,OAAA;IACAD,qBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,yBAAAC,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,sBAAAF,GAAA,CAAAT,IAAA;QACA,KAAAC,SAAA,GAAAQ,GAAA,CAAAT,IAAA,CAAAY,GAAA,CAAAC,QAAA;UACA,GAAAA,QAAA;UACAC,QAAA;QACA;;QAEA,KAAAb,SAAA,CAAAc,OAAA,CAAAF,QAAA;UACA,KAAAG,gBAAA,CAAAH,QAAA;QACA;MACA,GAAAI,KAAA,CAAAC,KAAA;QACAR,OAAA,CAAAQ,KAAA,6BAAAA,KAAA;MACA;IACA;IACAF,iBAAAH,QAAA,EAAAM,OAAA;MACA,KAAAb,QAAA,CAAAC,GAAA;QACAa,MAAA;UACAD,OAAA,EAAAA,OAAA;UACAjB,QAAA,OAAAA,QAAA;UACAmB,WAAA,EAAAR,QAAA,CAAAQ,WAAA;QACA;MACA,GAAAb,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAa,IAAA;UACAZ,OAAA,CAAAC,GAAA,aAAAE,QAAA,CAAAU,aAAA,YAAAd,GAAA,CAAAT,IAAA,EAAAwB,IAAA;UACAX,QAAA,CAAAC,QAAA,GAAAL,GAAA,CAAAT,IAAA,EAAAwB,IAAA;QACA;UACA,KAAAC,QAAA,CAAAP,KAAA,CAAAT,GAAA,CAAAiB,GAAA;QACA;MACA,GAAAT,KAAA,CAAAC,KAAA;QACAR,OAAA,CAAAQ,KAAA,oCAAAL,QAAA,CAAAU,aAAA,KAAAL,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}